# Generated by Django 4.1.7 on 2023-04-04 17:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                ("uid", models.UUIDField(default=uuid.uuid4)),
                ("created", models.DateTimeField(auto_now_add=True)),
                (
                    "email",
                    models.EmailField(
                        max_length=255, unique=True, verbose_name="email address"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_admin", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uid", models.UUIDField(default=uuid.uuid4)),
                ("created", models.DateTimeField(auto_now_add=True)),
                (
                    "username",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                ("firstname", models.CharField(blank=True, max_length=100, null=True)),
                ("lastname", models.CharField(blank=True, max_length=100, null=True)),
                ("slug", models.SlugField(blank=True, null=True)),
                (
                    "organizationName",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("location", models.CharField(blank=True, max_length=100, null=True)),
                ("email", models.EmailField(blank=True, max_length=150, null=True)),
                ("emailVerified", models.BooleanField(default=False)),
                ("email_token", models.CharField(max_length=100)),
                ("phone", models.CharField(blank=True, max_length=12, null=True)),
                ("phoneVerified", models.BooleanField(default=False)),
                ("phone_token", models.CharField(max_length=6)),
                ("dob", models.DateField(blank=True, null=True)),
                ("bio", tinymce.models.HTMLField(blank=True, null=True)),
                (
                    "profilePic",
                    models.ImageField(
                        default="uploads/ProfilePic/profile.jpg",
                        upload_to="uploads/ProfilePic",
                    ),
                ),
                (
                    "reset_password",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Profile",
                "verbose_name_plural": "Profiles",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Following",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uid", models.UUIDField(default=uuid.uuid4)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("following_user_count", models.IntegerField(default=0)),
                (
                    "following_user",
                    models.ManyToManyField(
                        related_name="following_user", to="accounts.profile"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="following",
                        to="accounts.profile",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Follower",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uid", models.UUIDField(default=uuid.uuid4)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("followers_user_count", models.IntegerField(default=0)),
                (
                    "followers_user",
                    models.ManyToManyField(
                        related_name="followers_user", to="accounts.profile"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="followers",
                        to="accounts.profile",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddIndex(
            model_name="profile",
            index=models.Index(
                fields=[
                    "username",
                    "email",
                    "firstname",
                    "lastname",
                    "phone",
                    "organizationName",
                ],
                name="accounts_pr_usernam_dd16b8_idx",
            ),
        ),
    ]
